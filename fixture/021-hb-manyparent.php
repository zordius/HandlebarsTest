<?php use \LightnCandy\SafeString as SafeString;use \LightnCandy\Runtime as LR;return function ($in = null, $options = null) {
    $helpers = array();
    $partials = array();
    $cx = array(
        'flags' => array(
            'jstrue' => true,
            'jsobj' => true,
            'spvar' => true,
            'prop' => true,
            'method' => false,
            'lambda' => false,
            'mustlok' => false,
            'mustlam' => false,
            'echo' => false,
            'partnc' => false,
            'knohlp' => false,
            'debug' => isset($options['debug']) ? $options['debug'] : 1,
        ),
        'constants' => array(),
        'helpers' => isset($options['helpers']) ? array_merge($helpers, $options['helpers']) : $helpers,
        'partials' => isset($options['partials']) ? array_merge($partials, $options['partials']) : $partials,
        'scopes' => array(),
        'sp_vars' => isset($options['data']) ? array_merge(array('root' => $in), $options['data']) : array('root' => $in),
        'blparam' => array(),
        'partialid' => 0,
        'runtime' => '\LightnCandy\Runtime',
    );
    
    return 'Hello '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('name'))).', you have just won $'.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('value'))).'!
<ul>
'.LR::sec($cx, $in, null, $in, true, function($cx, $in) {return ' <li>'.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('name'))).' is a '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('gender'))).' ('.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('name'))).', '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('value'))).', '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('end'))).')</li>
 simple if~
'.((LR::ifvar($cx, LR::v($cx, $in, isset($in) ? $in : null, array('good')), false)) ? '  simple GOOD! '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('goodchild'))).' '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' - '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' X '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).' ~ '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('end'))).'
' : '').' if-else
'.((LR::ifvar($cx, LR::v($cx, $in, isset($in) ? $in : null, array('good')), false)) ? '  GOOD! '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('goodchild'))).' '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' - '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' X '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).' ~ '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('end'))).'
' : '  BAD! '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('badchild'))).' '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' - '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' Y '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).' = '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('end'))).'
').' with
'.LR::wi($cx, LR::v($cx, $in, isset($in) ? $in : null, array('good')), null, $in, function($cx, $in) {return '    WITH: '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('gender'))).', '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' , '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).' , '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('end'))).'
';}).' simple unless
'.((!LR::ifvar($cx, LR::v($cx, $in, isset($in) ? $in : null, array('good')), false)) ? '   UNLESS good = bad -> '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' , '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).'
' : '').' unless else
'.((!LR::ifvar($cx, LR::v($cx, $in, isset($in) ? $in : null, array('good')), false)) ? '   UNLESS good = bad -> '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' , '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).'
' : '   UNLESS bad = good -> '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' , '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).'
').'';}).'----------THIS
'.LR::sec($cx, $in, null, $in, true, function($cx, $in) {return ' <li>'.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('name'))).' is a '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('gender'))).' ('.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('name'))).', '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('value'))).', '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('end'))).')</li>
'.((LR::ifvar($cx, LR::v($cx, $in, isset($in) ? $in : null, array('good')), false)) ? '  GOOD! '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('goodchild'))).' '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' - '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' X '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).' ~ '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('end'))).'
' : '  BAD! '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('badchild'))).' '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' - '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' Y '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).' = '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('end'))).'
').''.LR::wi($cx, LR::v($cx, $in, isset($in) ? $in : null, array('good')), null, $in, function($cx, $in) {return '    WITH: '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' , '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).' , '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('end'))).'
';}).'';}).'----------SECTION THIS
'.LR::sec($cx, $in, null, $in, false, function($cx, $in) {return ' <li>'.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('name'))).' is a '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('gender'))).' ('.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('name'))).', '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('value'))).', '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('end'))).')</li>
'.((LR::ifvar($cx, LR::v($cx, $in, isset($in) ? $in : null, array('good')), false)) ? '  GOOD! '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('goodchild'))).' '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' - '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' X '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).' ~ '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('end'))).'
' : '  BAD! '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('badchild'))).' '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' - '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' Y '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).' = '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('end'))).'
').''.LR::wi($cx, LR::v($cx, $in, isset($in) ? $in : null, array('good')), null, $in, function($cx, $in) {return '    WITH: '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' , '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).' , '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('end'))).'
';}).'';}).'----------SECTION .
'.LR::sec($cx, $in, null, $in, false, function($cx, $in) {return ' <li>'.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('name'))).' is a '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('gender'))).' ('.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('name'))).', '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('value'))).', '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('end'))).')</li>
'.((LR::ifvar($cx, LR::v($cx, $in, isset($in) ? $in : null, array('good')), false)) ? '  GOOD! '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('goodchild'))).' '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' - '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' X '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).' ~ '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('end'))).'
' : '  BAD! '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('badchild'))).' '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' - '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' Y '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).' = '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('end'))).'
').''.LR::wi($cx, LR::v($cx, $in, isset($in) ? $in : null, array('good')), null, $in, function($cx, $in) {return '    WITH: '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('gender'))).' , '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).' , '.LR::raw($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('end'))).'
';}).'';}).'</ul>
WITH TEST>
'.LR::wi($cx, LR::v($cx, $in, isset($in) ? $in : null, array('people')), null, $in, function($cx, $in) {return ' single: '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('name'))).', '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('gender'))).' , p -> '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('name'))).'
 '.LR::sec($cx, $in, null, $in, true, function($cx, $in) {return 'loop: '.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('name'))).' - '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-1]) ? $cx['scopes'][count($cx['scopes'])-1] : null, array('name'))).' - '.LR::encq($cx, LR::v($cx, $in, isset($cx['scopes'][count($cx['scopes'])-2]) ? $cx['scopes'][count($cx['scopes'])-2] : null, array('name'))).'';}).'
';}).''.LR::encq($cx, LR::v($cx, $in, isset($in) ? $in : null, array('end'))).'
';
}; ?>